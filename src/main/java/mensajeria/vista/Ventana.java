package mensajeria.vista;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import mensajeria.controlador.EmpresaControlador;
import mensajeria.controlador.OficinaControlador;
import mensajeria.controlador.PaqueteControlador;
import mensajeria.controlador.RepartidorControlador;
import mensajeria.modelo.Empresa;
import mensajeria.modelo.Oficina;
import mensajeria.modelo.Paquete;
import mensajeria.modelo.Repartidor;
import org.xml.sax.SAXException;

/**
 *
 * @author Álvaro
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        formato = new SimpleDateFormat("dd/MM/yyyy");
        try {
            cargarListas();
            cargarTablas();
            cargarCombos();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        jPanel_empresa = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable_empresa = new javax.swing.JTable();
        jTextField_empresa_nombre = new javax.swing.JTextField();
        jLabel_empresa_nombre = new javax.swing.JLabel();
        jLabel_empresa_cif = new javax.swing.JLabel();
        jTextField_empresa_cif = new javax.swing.JTextField();
        jLabel_empresa_director = new javax.swing.JLabel();
        jTextField_empresa_director = new javax.swing.JTextField();
        jLabel_empresa_web = new javax.swing.JLabel();
        jTextField_empresa_web = new javax.swing.JTextField();
        jButton_empresa_cancelar = new javax.swing.JButton();
        jButton_empresa_guardar = new javax.swing.JButton();
        jButton_empresa_borrar = new javax.swing.JButton();
        jButton_empresa_modificar = new javax.swing.JButton();
        jButton_empresa_aniadir = new javax.swing.JButton();
        jPanel_oficina = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable_oficina = new javax.swing.JTable();
        jTextField_oficina_direccion = new javax.swing.JTextField();
        jLabel_oficina_direccion = new javax.swing.JLabel();
        jLabel_oficina_telefono = new javax.swing.JLabel();
        jTextField_oficina_telefono = new javax.swing.JTextField();
        jLabel_oficina_email = new javax.swing.JLabel();
        jTextField_oficina_email = new javax.swing.JTextField();
        jLabel_oficina_encargado = new javax.swing.JLabel();
        jTextField_oficina_encargado = new javax.swing.JTextField();
        jLabel_oficina_empresa = new javax.swing.JLabel();
        jComboBox_oficina_empresa = new javax.swing.JComboBox<>();
        jButton_oficina_cancelar = new javax.swing.JButton();
        jButton_oficina_guardar = new javax.swing.JButton();
        jButton_oficina_borrar = new javax.swing.JButton();
        jButton_oficina_modificar = new javax.swing.JButton();
        jButton_oficina_aniadir = new javax.swing.JButton();
        jPanel_repartidor = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable_repartidor = new javax.swing.JTable();
        jButton_repartidor_aniadir = new javax.swing.JButton();
        jButton_repartidor_modificar = new javax.swing.JButton();
        jButton_repartidor_borrar = new javax.swing.JButton();
        jButton_repartidor_guardar = new javax.swing.JButton();
        jButton_repartidor_cancelar = new javax.swing.JButton();
        jTextField_repartidor_antiguedad = new javax.swing.JTextField();
        jTextField_repartidor_telefono = new javax.swing.JTextField();
        jTextField_repartidor_nombre = new javax.swing.JTextField();
        jTextField_repartidor_dni = new javax.swing.JTextField();
        jLabel_repartidor_dni = new javax.swing.JLabel();
        jLabel_repartidor_nombre = new javax.swing.JLabel();
        jLabel_repartidor_telefono = new javax.swing.JLabel();
        jLabel_repartidor_antiguedad = new javax.swing.JLabel();
        jLabel_repartidor_oficina = new javax.swing.JLabel();
        jComboBox_repartidor_oficina = new javax.swing.JComboBox<>();
        jPanel_paquete = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_paquete = new javax.swing.JTable();
        jLabel_paquete_fechaEntrega = new javax.swing.JLabel();
        jLabel_paquete_direccionDestino = new javax.swing.JLabel();
        jLabel_paquete_telefonoDestino = new javax.swing.JLabel();
        jLabel_paquete_direccionOrigen = new javax.swing.JLabel();
        jTextField_paquete_telefonoOrigen = new javax.swing.JTextField();
        jComboBox_paquete_repartidor = new javax.swing.JComboBox<>();
        jTextField_paquete_direccionOrigen = new javax.swing.JTextField();
        jTextField_paquete_telefonoDestino = new javax.swing.JTextField();
        jTextField_paquete_direccionDestino = new javax.swing.JTextField();
        jTextField_paquete_fechaEntrega = new javax.swing.JTextField();
        jButton_paquete_cancelar = new javax.swing.JButton();
        jButton_paquete_guardar = new javax.swing.JButton();
        jButton_paquete_borrar = new javax.swing.JButton();
        jButton_paquete_modificar = new javax.swing.JButton();
        jButton_paquete_aniadir = new javax.swing.JButton();
        jLabel_paquete_telefonoOrigen = new javax.swing.JLabel();
        jLabel_paquete_repartidor = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mensajerías");

        jTabbedPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPaneMouseClicked(evt);
            }
        });

        jPanel_empresa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_empresaMouseClicked(evt);
            }
        });

        jTable_empresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Página web"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_empresa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_empresaMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTable_empresa);
        if (jTable_empresa.getColumnModel().getColumnCount() > 0) {
            jTable_empresa.getColumnModel().getColumn(0).setResizable(false);
            jTable_empresa.getColumnModel().getColumn(1).setResizable(false);
        }

        jTextField_empresa_nombre.setEditable(false);

        jLabel_empresa_nombre.setText("Nombre:");

        jLabel_empresa_cif.setText("CIF:");

        jTextField_empresa_cif.setEditable(false);

        jLabel_empresa_director.setText("Director:");

        jTextField_empresa_director.setEditable(false);

        jLabel_empresa_web.setText("Página web:");

        jTextField_empresa_web.setEditable(false);

        jButton_empresa_cancelar.setText("Cancelar");
        jButton_empresa_cancelar.setEnabled(false);
        jButton_empresa_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_empresa_cancelarActionPerformed(evt);
            }
        });

        jButton_empresa_guardar.setText("Guardar");
        jButton_empresa_guardar.setEnabled(false);
        jButton_empresa_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_empresa_guardarActionPerformed(evt);
            }
        });

        jButton_empresa_borrar.setText("Borrar");
        jButton_empresa_borrar.setEnabled(false);
        jButton_empresa_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_empresa_borrarActionPerformed(evt);
            }
        });

        jButton_empresa_modificar.setText("Modificar");
        jButton_empresa_modificar.setEnabled(false);
        jButton_empresa_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_empresa_modificarActionPerformed(evt);
            }
        });

        jButton_empresa_aniadir.setText("Añadir");
        jButton_empresa_aniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_empresa_aniadirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_empresaLayout = new javax.swing.GroupLayout(jPanel_empresa);
        jPanel_empresa.setLayout(jPanel_empresaLayout);
        jPanel_empresaLayout.setHorizontalGroup(
            jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_empresaLayout.createSequentialGroup()
                .addContainerGap(86, Short.MAX_VALUE)
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_empresa_director, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_empresa_cif, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_empresa_nombre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_empresa_web, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(24, 24, 24)
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_empresaLayout.createSequentialGroup()
                        .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_empresa_nombre)
                            .addComponent(jTextField_empresa_cif, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_empresaLayout.createSequentialGroup()
                        .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_empresa_web)
                            .addComponent(jTextField_empresa_director))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton_empresa_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton_empresa_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30))
            .addGroup(jPanel_empresaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_empresa_modificar)
                    .addComponent(jButton_empresa_aniadir)
                    .addComponent(jButton_empresa_borrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel_empresaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField_empresa_cif, jTextField_empresa_director, jTextField_empresa_web});

        jPanel_empresaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton_empresa_aniadir, jButton_empresa_borrar, jButton_empresa_modificar});

        jPanel_empresaLayout.setVerticalGroup(
            jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_empresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_empresaLayout.createSequentialGroup()
                        .addComponent(jButton_empresa_aniadir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_empresa_modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_empresa_borrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_empresa_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_empresa_nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_empresa_cif, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_empresa_cif))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_empresaLayout.createSequentialGroup()
                        .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_empresa_director, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_empresa_director))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel_empresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_empresa_web, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_empresa_web)))
                    .addGroup(jPanel_empresaLayout.createSequentialGroup()
                        .addComponent(jButton_empresa_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_empresa_cancelar)))
                .addGap(116, 116, 116))
        );

        jTabbedPane.addTab("Empresa", jPanel_empresa);

        jPanel_oficina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_oficinaMouseClicked(evt);
            }
        });

        jTable_oficina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dirección", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_oficina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_oficinaMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTable_oficina);
        if (jTable_oficina.getColumnModel().getColumnCount() > 0) {
            jTable_oficina.getColumnModel().getColumn(0).setResizable(false);
            jTable_oficina.getColumnModel().getColumn(1).setResizable(false);
        }

        jTextField_oficina_direccion.setEditable(false);

        jLabel_oficina_direccion.setText("Dirección:");

        jLabel_oficina_telefono.setText("Teléfono:");

        jTextField_oficina_telefono.setEditable(false);

        jLabel_oficina_email.setText("Email:");

        jTextField_oficina_email.setEditable(false);

        jLabel_oficina_encargado.setText("Encargado:");

        jTextField_oficina_encargado.setEditable(false);

        jLabel_oficina_empresa.setText("Empresa:");

        jComboBox_oficina_empresa.setEnabled(false);

        jButton_oficina_cancelar.setText("Cancelar");
        jButton_oficina_cancelar.setEnabled(false);
        jButton_oficina_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_oficina_cancelarActionPerformed(evt);
            }
        });

        jButton_oficina_guardar.setText("Guardar");
        jButton_oficina_guardar.setEnabled(false);
        jButton_oficina_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_oficina_guardarActionPerformed(evt);
            }
        });

        jButton_oficina_borrar.setText("Borrar");
        jButton_oficina_borrar.setEnabled(false);
        jButton_oficina_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_oficina_borrarActionPerformed(evt);
            }
        });

        jButton_oficina_modificar.setText("Modificar");
        jButton_oficina_modificar.setEnabled(false);
        jButton_oficina_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_oficina_modificarActionPerformed(evt);
            }
        });

        jButton_oficina_aniadir.setText("Añadir");
        jButton_oficina_aniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_oficina_aniadirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel_oficinaLayout = new javax.swing.GroupLayout(jPanel_oficina);
        jPanel_oficina.setLayout(jPanel_oficinaLayout);
        jPanel_oficinaLayout.setHorizontalGroup(
            jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_oficinaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_oficina_email, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_oficina_telefono, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_oficina_direccion, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_oficina_encargado, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_oficina_empresa, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(24, 24, 24)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_oficinaLayout.createSequentialGroup()
                            .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_oficina_direccion)
                                .addComponent(jTextField_oficina_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(122, 122, 122))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_oficinaLayout.createSequentialGroup()
                            .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_oficina_encargado)
                                .addComponent(jTextField_oficina_email))
                            .addGap(33, 33, 33)
                            .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton_oficina_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_oficina_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jComboBox_oficina_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
            .addGroup(jPanel_oficinaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_oficina_modificar)
                    .addComponent(jButton_oficina_aniadir)
                    .addComponent(jButton_oficina_borrar))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel_oficinaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField_oficina_email, jTextField_oficina_encargado, jTextField_oficina_telefono});

        jPanel_oficinaLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton_oficina_aniadir, jButton_oficina_borrar, jButton_oficina_modificar});

        jPanel_oficinaLayout.setVerticalGroup(
            jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_oficinaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_oficinaLayout.createSequentialGroup()
                        .addComponent(jButton_oficina_aniadir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_oficina_modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_oficina_borrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_oficina_direccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_oficina_direccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_oficina_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_oficina_telefono))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_oficinaLayout.createSequentialGroup()
                        .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_oficina_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_oficina_email))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_oficina_encargado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_oficina_encargado)))
                    .addGroup(jPanel_oficinaLayout.createSequentialGroup()
                        .addComponent(jButton_oficina_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_oficina_cancelar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_oficinaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_oficina_empresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_oficina_empresa))
                .addGap(80, 80, 80))
        );

        jTabbedPane.addTab("Oficina", jPanel_oficina);

        jPanel_repartidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_repartidorMouseClicked(evt);
            }
        });

        jTable_repartidor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Teléfono"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_repartidor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_repartidorMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(jTable_repartidor);
        if (jTable_repartidor.getColumnModel().getColumnCount() > 0) {
            jTable_repartidor.getColumnModel().getColumn(0).setResizable(false);
            jTable_repartidor.getColumnModel().getColumn(1).setResizable(false);
        }

        jButton_repartidor_aniadir.setText("Añadir");
        jButton_repartidor_aniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_repartidor_aniadirActionPerformed(evt);
            }
        });

        jButton_repartidor_modificar.setText("Modificar");
        jButton_repartidor_modificar.setEnabled(false);
        jButton_repartidor_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_repartidor_modificarActionPerformed(evt);
            }
        });

        jButton_repartidor_borrar.setText("Borrar");
        jButton_repartidor_borrar.setEnabled(false);
        jButton_repartidor_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_repartidor_borrarActionPerformed(evt);
            }
        });

        jButton_repartidor_guardar.setText("Guardar");
        jButton_repartidor_guardar.setEnabled(false);
        jButton_repartidor_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_repartidor_guardarActionPerformed(evt);
            }
        });

        jButton_repartidor_cancelar.setText("Cancelar");
        jButton_repartidor_cancelar.setEnabled(false);
        jButton_repartidor_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_repartidor_cancelarActionPerformed(evt);
            }
        });

        jTextField_repartidor_antiguedad.setEditable(false);

        jTextField_repartidor_telefono.setEditable(false);

        jTextField_repartidor_nombre.setEditable(false);

        jTextField_repartidor_dni.setEditable(false);

        jLabel_repartidor_dni.setText("DNI:");

        jLabel_repartidor_nombre.setText("Nombre:");

        jLabel_repartidor_telefono.setText("Teléfono:");

        jLabel_repartidor_antiguedad.setText("Antigüedad:");

        jLabel_repartidor_oficina.setText("Oficina:");

        jComboBox_repartidor_oficina.setEnabled(false);

        javax.swing.GroupLayout jPanel_repartidorLayout = new javax.swing.GroupLayout(jPanel_repartidor);
        jPanel_repartidor.setLayout(jPanel_repartidorLayout);
        jPanel_repartidorLayout.setHorizontalGroup(
            jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_repartidorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_repartidorLayout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_repartidor_modificar)
                            .addComponent(jButton_repartidor_aniadir)
                            .addComponent(jButton_repartidor_borrar))
                        .addContainerGap(11, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_repartidorLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_repartidor_telefono, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_repartidor_nombre, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_repartidor_dni, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_repartidor_antiguedad, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel_repartidor_oficina, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_repartidorLayout.createSequentialGroup()
                                    .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_repartidor_dni)
                                        .addComponent(jTextField_repartidor_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(122, 122, 122))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_repartidorLayout.createSequentialGroup()
                                    .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTextField_repartidor_antiguedad)
                                        .addComponent(jTextField_repartidor_telefono))
                                    .addGap(33, 33, 33)
                                    .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton_repartidor_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton_repartidor_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jComboBox_repartidor_oficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30))))
        );

        jPanel_repartidorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField_repartidor_antiguedad, jTextField_repartidor_nombre, jTextField_repartidor_telefono});

        jPanel_repartidorLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton_repartidor_aniadir, jButton_repartidor_borrar, jButton_repartidor_modificar});

        jPanel_repartidorLayout.setVerticalGroup(
            jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_repartidorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_repartidorLayout.createSequentialGroup()
                        .addComponent(jButton_repartidor_aniadir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_repartidor_modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_repartidor_borrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_repartidor_dni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_repartidor_dni))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_repartidor_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_repartidor_nombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_repartidorLayout.createSequentialGroup()
                        .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_repartidor_telefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_repartidor_telefono))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_repartidor_antiguedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_repartidor_antiguedad)))
                    .addGroup(jPanel_repartidorLayout.createSequentialGroup()
                        .addComponent(jButton_repartidor_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_repartidor_cancelar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_repartidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_repartidor_oficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_repartidor_oficina))
                .addGap(80, 80, 80))
        );

        jTabbedPane.addTab("Repartidor", jPanel_repartidor);

        jPanel_paquete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel_paqueteMouseClicked(evt);
            }
        });

        jTable_paquete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Destino", "Origen"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable_paquete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_paqueteMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable_paquete);
        if (jTable_paquete.getColumnModel().getColumnCount() > 0) {
            jTable_paquete.getColumnModel().getColumn(0).setResizable(false);
            jTable_paquete.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel_paquete_fechaEntrega.setText("Fecha entrega:");

        jLabel_paquete_direccionDestino.setText("Dirección destino:");

        jLabel_paquete_telefonoDestino.setText("Teléfono destino:");

        jLabel_paquete_direccionOrigen.setText("Dirección origen:");

        jTextField_paquete_telefonoOrigen.setEditable(false);

        jComboBox_paquete_repartidor.setEnabled(false);

        jTextField_paquete_direccionOrigen.setEditable(false);

        jTextField_paquete_telefonoDestino.setEditable(false);

        jTextField_paquete_direccionDestino.setEditable(false);

        jTextField_paquete_fechaEntrega.setEditable(false);

        jButton_paquete_cancelar.setText("Cancelar");
        jButton_paquete_cancelar.setEnabled(false);
        jButton_paquete_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_paquete_cancelarActionPerformed(evt);
            }
        });

        jButton_paquete_guardar.setText("Guardar");
        jButton_paquete_guardar.setEnabled(false);
        jButton_paquete_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_paquete_guardarActionPerformed(evt);
            }
        });

        jButton_paquete_borrar.setText("Borrar");
        jButton_paquete_borrar.setEnabled(false);
        jButton_paquete_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_paquete_borrarActionPerformed(evt);
            }
        });

        jButton_paquete_modificar.setText("Modificar");
        jButton_paquete_modificar.setEnabled(false);
        jButton_paquete_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_paquete_modificarActionPerformed(evt);
            }
        });

        jButton_paquete_aniadir.setText("Añadir");
        jButton_paquete_aniadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_paquete_aniadirActionPerformed(evt);
            }
        });

        jLabel_paquete_telefonoOrigen.setText("Teléfono origen:");

        jLabel_paquete_repartidor.setText("Repartidor:");

        javax.swing.GroupLayout jPanel_paqueteLayout = new javax.swing.GroupLayout(jPanel_paquete);
        jPanel_paquete.setLayout(jPanel_paqueteLayout);
        jPanel_paqueteLayout.setHorizontalGroup(
            jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_paqueteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_paquete_modificar)
                    .addComponent(jButton_paquete_aniadir)
                    .addComponent(jButton_paquete_borrar))
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_paqueteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_paquete_telefonoDestino, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_paquete_direccionDestino, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_paquete_fechaEntrega, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_paquete_direccionOrigen, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_paquete_telefonoOrigen, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel_paquete_repartidor, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(24, 24, 24)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_paqueteLayout.createSequentialGroup()
                        .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_paquete_fechaEntrega)
                            .addComponent(jTextField_paquete_direccionDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jComboBox_paquete_repartidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel_paqueteLayout.createSequentialGroup()
                            .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_paquete_telefonoOrigen, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addComponent(jTextField_paquete_direccionOrigen)
                                .addComponent(jTextField_paquete_telefonoDestino))
                            .addGap(33, 33, 33)
                            .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton_paquete_guardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton_paquete_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(30, 30, 30))
        );

        jPanel_paqueteLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField_paquete_direccionDestino, jTextField_paquete_direccionOrigen, jTextField_paquete_telefonoDestino, jTextField_paquete_telefonoOrigen});

        jPanel_paqueteLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton_paquete_aniadir, jButton_paquete_borrar, jButton_paquete_modificar});

        jPanel_paqueteLayout.setVerticalGroup(
            jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel_paqueteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel_paqueteLayout.createSequentialGroup()
                        .addComponent(jButton_paquete_aniadir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_paquete_modificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_paquete_borrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_paquete_fechaEntrega, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_paquete_fechaEntrega))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_paquete_direccionDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_paquete_direccionDestino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel_paqueteLayout.createSequentialGroup()
                        .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_paquete_telefonoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_paquete_telefonoDestino))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_paquete_direccionOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_paquete_direccionOrigen)))
                    .addGroup(jPanel_paqueteLayout.createSequentialGroup()
                        .addComponent(jButton_paquete_guardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_paquete_cancelar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_paquete_telefonoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_paquete_telefonoOrigen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel_paqueteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_paquete_repartidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_paquete_repartidor))
                .addGap(46, 46, 46))
        );

        jTabbedPane.addTab("Paquete", jPanel_paquete);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPaneMouseClicked
        try {
            cargarListas();
            cargarTablas();
            cargarCombos();
            limpiarCampos();
            desactivarBotonesEmpresa();
            desactivarBotonesOficina();
            desactivarBotonesRepartidor();
            desactivarBotonesPaquete();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTabbedPaneMouseClicked

    private void jPanel_empresaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_empresaMouseClicked
        try {
            cargarListas();
            cargarTablaEmpresa();
            limpiarCamposEmpresa();
            desactivarBotonesEmpresa();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jPanel_empresaMouseClicked

    private void jTable_empresaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_empresaMouseClicked
        filaEmpresa = jTable_empresa.rowAtPoint(evt.getPoint());
        Empresa empresa = listaEmpresasMostradas.get(filaEmpresa);
        
        jTextField_empresa_nombre.setText(empresa.getNombre_empresa());
        jTextField_empresa_cif.setText(empresa.getCif());
        jTextField_empresa_director.setText(empresa.getDirector());
        jTextField_empresa_web.setText(empresa.getWeb());
        
        jButton_empresa_aniadir.setEnabled(false);
        jButton_empresa_modificar.setEnabled(true);
        jButton_empresa_borrar.setEnabled(true);
    }//GEN-LAST:event_jTable_empresaMouseClicked

    private void jButton_empresa_aniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_empresa_aniadirActionPerformed
        jTable_empresa.setEnabled(false);
        jButton_empresa_aniadir.setEnabled(false);
        jButton_empresa_guardar.setEnabled(true);
        jButton_empresa_cancelar.setEnabled(true);
        activarCamposEmpresa();
        aniadirEmpresa = true;
    }//GEN-LAST:event_jButton_empresa_aniadirActionPerformed

    private void jButton_empresa_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_empresa_modificarActionPerformed
        jTable_empresa.setEnabled(false);
        jButton_empresa_modificar.setEnabled(false);
        jButton_empresa_borrar.setEnabled(false);
        jButton_empresa_guardar.setEnabled(true);
        jButton_empresa_cancelar.setEnabled(true);
        activarCamposEmpresa();
        modificarEmpresa = true;
    }//GEN-LAST:event_jButton_empresa_modificarActionPerformed

    private void jButton_empresa_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_empresa_borrarActionPerformed
        Empresa empresa = listaEmpresasMostradas.get(filaEmpresa);
        int id_empresaEliminar = empresa.getId_empresa();
        
        if (datosAsociadosEmpresa(id_empresaEliminar)) {
            JOptionPane.showMessageDialog(this, "Imposible eliminar. "
                    + "\n\nContiene datos asociados a la entidad. "
                    + "\nAntes debe eliminar los datos asociados.", "Error", JOptionPane.WARNING_MESSAGE);
        }else {
            try {
                eliminarEmpresa(id_empresaEliminar);
                cargarListas();
                cargarTablaEmpresa();
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            }
        }
        
        limpiarCamposEmpresa();
        desactivarBotonesEmpresa();
        desactivarCamposEmpresa();
    }//GEN-LAST:event_jButton_empresa_borrarActionPerformed

    private void jButton_empresa_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_empresa_guardarActionPerformed
        String nombre_empresa = jTextField_empresa_nombre.getText();
        String cif = jTextField_empresa_cif.getText();
        String director = jTextField_empresa_director.getText();
        String web = jTextField_empresa_web.getText();

        if (nombre_empresa.equals("") || cif.equals("") || director.equals("") || web.equals("")) {
            JOptionPane.showMessageDialog(this, "No se permiten campos vacíos",
                    "Atención", JOptionPane.WARNING_MESSAGE);
        } else {
            if (aniadirEmpresa) {
                aniadirEmpresa(nombre_empresa, cif, director, web);
            } else if (modificarEmpresa) {
                modificarEmpresa(filaEmpresa, nombre_empresa, cif, director, web);
            }

            try {
                empresaControlador.escribirEmpresa(listaEmpresas);
                cargarListas();
                cargarTablaEmpresa();
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            }

            aniadirEmpresa = false;
            modificarEmpresa = false;

            limpiarCamposEmpresa();
            desactivarBotonesEmpresa();
            desactivarCamposEmpresa();
        }
    }//GEN-LAST:event_jButton_empresa_guardarActionPerformed

    private void jButton_empresa_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_empresa_cancelarActionPerformed
        limpiarCamposEmpresa();
        desactivarBotonesEmpresa();
        desactivarCamposEmpresa();
    }//GEN-LAST:event_jButton_empresa_cancelarActionPerformed

    private void jPanel_oficinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_oficinaMouseClicked
        try {
            cargarListas();
            cargarTablaOficina();
            cargarComboOficina();
            limpiarCamposOficina();
            desactivarBotonesOficina();
            desactivarCamposOficina();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jPanel_oficinaMouseClicked

    private void jTable_oficinaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_oficinaMouseClicked
        filaOficina = jTable_oficina.rowAtPoint(evt.getPoint());
        Oficina oficina = listaOficinasMostradas.get(filaOficina);
        
        jTextField_oficina_direccion.setText(oficina.getDireccion_oficina());
        jTextField_oficina_telefono.setText(oficina.getTelefono_oficina());
        jTextField_oficina_email.setText(oficina.getEmail());
        jTextField_oficina_encargado.setText(oficina.getEncargado());
        
        int empresa = oficina.getEmpresa();
        int index = 0;
        for (int i = 0; i < listaEmpresasMostradas.size(); i++) {
            Empresa e = listaEmpresasMostradas.get(i);
            if (e.getId_empresa() == empresa) {
                index = i;
            }
        }
        jComboBox_oficina_empresa.setSelectedIndex(index);
        
        jButton_oficina_aniadir.setEnabled(false);
        jButton_oficina_modificar.setEnabled(true);
        jButton_oficina_borrar.setEnabled(true);
    }//GEN-LAST:event_jTable_oficinaMouseClicked

    private void jButton_oficina_aniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_oficina_aniadirActionPerformed
        jTable_oficina.setEnabled(false);
        jButton_oficina_aniadir.setEnabled(false);
        jButton_oficina_guardar.setEnabled(true);
        jButton_oficina_cancelar.setEnabled(true);
        activarCamposOficina();
        aniadirOficina = true;
    }//GEN-LAST:event_jButton_oficina_aniadirActionPerformed

    private void jButton_oficina_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_oficina_modificarActionPerformed
        jTable_oficina.setEnabled(false);
        jButton_oficina_modificar.setEnabled(false);
        jButton_oficina_borrar.setEnabled(false);
        jButton_oficina_guardar.setEnabled(true);
        jButton_oficina_cancelar.setEnabled(true);
        activarCamposOficina();
        modificarOficina = true;
    }//GEN-LAST:event_jButton_oficina_modificarActionPerformed

    private void jButton_oficina_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_oficina_borrarActionPerformed
        Oficina oficina = listaOficinasMostradas.get(filaOficina);
        int id_oficinaEliminar = oficina.getId_oficina();
        
        if (datosAsociadosOficina(id_oficinaEliminar)) {
            JOptionPane.showMessageDialog(this, "Imposible eliminar. "
                    + "\n\nContiene datos asociados a la entidad. "
                    + "\nAntes debe eliminar los datos asociados.", "Error", JOptionPane.WARNING_MESSAGE);
        }else {
            try {
                eliminarOficina(id_oficinaEliminar);
                cargarListas();
                cargarTablaOficina();
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            }
        }
        
        limpiarCamposOficina();
        desactivarBotonesOficina();
        desactivarCamposOficina();
    }//GEN-LAST:event_jButton_oficina_borrarActionPerformed

    private void jButton_oficina_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_oficina_guardarActionPerformed
        String direccion_oficina = jTextField_oficina_direccion.getText();
        String telefono_oficina = jTextField_oficina_telefono.getText();
        String email = jTextField_oficina_email.getText();
        String encargado = jTextField_oficina_encargado.getText();

        if (direccion_oficina.equals("") || telefono_oficina.equals("") || email.equals("") || encargado.equals("")) {
            JOptionPane.showMessageDialog(this, "No se permiten campos vacíos", "Atención", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int empresaSeleccionada = jComboBox_oficina_empresa.getSelectedIndex();
                int empresa = listaEmpresasMostradas.get(empresaSeleccionada).getId_empresa();

                if (aniadirOficina) {
                    aniadirOficina(direccion_oficina, telefono_oficina, email, encargado, empresa);
                } else if (modificarOficina) {
                    modificarOficina(filaOficina, direccion_oficina, telefono_oficina, email, encargado, empresa);
                }
            } catch (IndexOutOfBoundsException iob) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una empresa", "Atención", JOptionPane.WARNING_MESSAGE);
            }

            try {
                oficinaControlador.escribirOficina(listaOficinas);
                cargarListas();
                cargarTablaOficina();
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            }

            aniadirOficina = false;
            modificarOficina = false;

            limpiarCamposOficina();
            desactivarBotonesOficina();
            desactivarCamposOficina();
        }
    }//GEN-LAST:event_jButton_oficina_guardarActionPerformed

    private void jButton_oficina_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_oficina_cancelarActionPerformed
        limpiarCamposOficina();
        desactivarBotonesOficina();
        desactivarCamposOficina();
    }//GEN-LAST:event_jButton_oficina_cancelarActionPerformed

    private void jPanel_repartidorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_repartidorMouseClicked
        try {
            cargarListas();
            cargarTablaRepartidor();
            cargarComboRepartidor();
            limpiarCamposRepartidor();
            desactivarBotonesRepartidor();
            desactivarCamposRepartidor();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }       
    }//GEN-LAST:event_jPanel_repartidorMouseClicked

    private void jTable_repartidorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_repartidorMouseClicked
        filaRepartidor = jTable_repartidor.rowAtPoint(evt.getPoint());
        Repartidor repartidor = listaRepartidoresMostrados.get(filaRepartidor);
        
        jTextField_repartidor_dni.setText(repartidor.getDni());
        jTextField_repartidor_nombre.setText(repartidor.getNombre_repartidor());
        jTextField_repartidor_telefono.setText(repartidor.getTelefono_repartidor());
        jTextField_repartidor_antiguedad.setText(String.valueOf(repartidor.getAntiguedad()));
        
        int oficina = repartidor.getOficina();
        int index = 0;
        for (int i = 0; i < listaOficinasMostradas.size(); i++) {
            Oficina o = listaOficinasMostradas.get(i);
            if (o.getId_oficina() == oficina) {
                index = i;
            }
        }
        jComboBox_repartidor_oficina.setSelectedIndex(index);
        
        jButton_repartidor_aniadir.setEnabled(false);
        jButton_repartidor_modificar.setEnabled(true);
        jButton_repartidor_borrar.setEnabled(true);
    }//GEN-LAST:event_jTable_repartidorMouseClicked

    private void jButton_repartidor_aniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_repartidor_aniadirActionPerformed
        jTable_repartidor.setEnabled(false);
        jButton_repartidor_aniadir.setEnabled(false);
        jButton_repartidor_guardar.setEnabled(true);
        jButton_repartidor_cancelar.setEnabled(true);
        activarCamposRepartidor();
        aniadirRepartidor = true;
    }//GEN-LAST:event_jButton_repartidor_aniadirActionPerformed

    private void jButton_repartidor_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_repartidor_modificarActionPerformed
        jTable_repartidor.setEnabled(false);
        jButton_repartidor_modificar.setEnabled(false);
        jButton_repartidor_borrar.setEnabled(false);
        jButton_repartidor_guardar.setEnabled(true);
        jButton_repartidor_cancelar.setEnabled(true);
        activarCamposRepartidor();
        modificarRepartidor = true;
    }//GEN-LAST:event_jButton_repartidor_modificarActionPerformed

    private void jButton_repartidor_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_repartidor_borrarActionPerformed
        Repartidor repartidor = listaRepartidoresMostrados.get(filaRepartidor);
        int id_repartidorEliminar = repartidor.getId_repartidor();
        
        if (datosAsociadosRepartidor(id_repartidorEliminar)) {
            JOptionPane.showMessageDialog(this, "Imposible eliminar. "
                    + "\n\nContiene datos asociados a la entidad. "
                    + "\nAntes debe eliminar los datos asociados.", "Error", JOptionPane.WARNING_MESSAGE);
            jButton_repartidor_aniadir.setEnabled(true);
        }else {
            try {
                eliminarRepartidor(id_repartidorEliminar);
                cargarListas();
                cargarTablaRepartidor();
            } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
            }
        }
        
        limpiarCamposRepartidor();
        desactivarBotonesRepartidor();
        desactivarCamposRepartidor();
    }//GEN-LAST:event_jButton_repartidor_borrarActionPerformed

    private void jButton_repartidor_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_repartidor_guardarActionPerformed
        String dni = jTextField_repartidor_dni.getText();
        String nombre_repartidor = jTextField_repartidor_nombre.getText();
        String telefono_repartidor = jTextField_repartidor_telefono.getText();

        if (dni.equals("") || nombre_repartidor.equals("") || telefono_repartidor.equals("") || jTextField_repartidor_antiguedad.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "No se permiten campos vacíos", "Atención", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                int antiguedad = Integer.parseInt(jTextField_repartidor_antiguedad.getText());
                if (antiguedad < 0) {
                    JOptionPane.showMessageDialog(this, "Antigüedad no puede ser negativa", "Atención", JOptionPane.WARNING_MESSAGE);
                } else {
                    int oficina_seleccionada = jComboBox_repartidor_oficina.getSelectedIndex();
                    int oficina = listaOficinasMostradas.get(oficina_seleccionada).getId_oficina();

                    if (aniadirRepartidor) {
                        aniadirRepartidor(dni, nombre_repartidor, telefono_repartidor, antiguedad, oficina);
                    } else if (modificarRepartidor) {
                        modificarRepartidor(filaRepartidor, dni, nombre_repartidor, telefono_repartidor, antiguedad, oficina);
                    }

                    try {
                        repartidorControlador.escribirRepartidor(listaRepartidores);
                        cargarListas();
                        cargarTablaRepartidor();
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
                        ex.printStackTrace();
                    }

                    aniadirRepartidor = false;
                    modificarRepartidor = false;

                    limpiarCamposRepartidor();
                    desactivarBotonesRepartidor();
                    desactivarCamposRepartidor();
                }
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(this, "El campo antigüedad solo admite números enteros", "Atención", JOptionPane.WARNING_MESSAGE);
            } catch (IndexOutOfBoundsException iob) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar una oficina", "Atención", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton_repartidor_guardarActionPerformed

    private void jButton_repartidor_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_repartidor_cancelarActionPerformed
        limpiarCamposRepartidor();
        desactivarBotonesRepartidor();
        desactivarCamposRepartidor();
    }//GEN-LAST:event_jButton_repartidor_cancelarActionPerformed

    private void jPanel_paqueteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel_paqueteMouseClicked
        try {
            cargarListas();
            cargarTablaPaquete();
            cargarComboPaquete();
            limpiarCamposPaquete();
            desactivarBotonesPaquete();
            desactivarCamposPaquete();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }            
    }//GEN-LAST:event_jPanel_paqueteMouseClicked

    private void jTable_paqueteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_paqueteMouseClicked
        filaPaquete = jTable_paquete.rowAtPoint(evt.getPoint());
        Paquete paquete = listaPaquetesMostrados.get(filaPaquete);
        
        jTextField_paquete_fechaEntrega.setText(formato.format(paquete.getFecha_entrega()));
        jTextField_paquete_direccionDestino.setText(paquete.getDireccion_destino());
        jTextField_paquete_telefonoDestino.setText(paquete.getTelefono_destino());
        jTextField_paquete_direccionOrigen.setText(paquete.getDireccion_origen());
        jTextField_paquete_telefonoOrigen.setText(paquete.getTelefono_origen());
        
        int repartidor = paquete.getRepartidor();
        int index = 0;
        for (int i = 0; i < listaRepartidoresMostrados.size(); i++) {
            Repartidor r = listaRepartidoresMostrados.get(i);
            if (r.getId_repartidor() == repartidor) {
                index = i;
            }
        }
        jComboBox_paquete_repartidor.setSelectedIndex(index);
        
        jButton_paquete_aniadir.setEnabled(false);
        jButton_paquete_modificar.setEnabled(true);
        jButton_paquete_borrar.setEnabled(true);
    }//GEN-LAST:event_jTable_paqueteMouseClicked

    private void jButton_paquete_aniadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_paquete_aniadirActionPerformed
        jTable_paquete.setEnabled(false);
        jButton_paquete_aniadir.setEnabled(false);
        jButton_paquete_guardar.setEnabled(true);
        jButton_paquete_cancelar.setEnabled(true);
        activarCamposPaquete();
        aniadirPaquete = true;
    }//GEN-LAST:event_jButton_paquete_aniadirActionPerformed

    private void jButton_paquete_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_paquete_modificarActionPerformed
        jTable_paquete.setEnabled(false);
        jButton_paquete_modificar.setEnabled(false);
        jButton_paquete_borrar.setEnabled(false);
        jButton_paquete_guardar.setEnabled(true);
        jButton_paquete_cancelar.setEnabled(true);
        activarCamposPaquete();
        modificarPaquete = true;
    }//GEN-LAST:event_jButton_paquete_modificarActionPerformed

    private void jButton_paquete_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_paquete_borrarActionPerformed
        Paquete paquete = listaPaquetesMostrados.get(filaPaquete);
        int id_paqueteEliminar = paquete.getId_paquete();
        
        try {
            eliminarPaquete(id_paqueteEliminar);
            cargarListas();
            cargarTablaPaquete();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }
        
        limpiarCamposPaquete();
        desactivarBotonesPaquete();
        desactivarCamposPaquete();
    }//GEN-LAST:event_jButton_paquete_borrarActionPerformed

    private void jButton_paquete_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_paquete_guardarActionPerformed
        Date fecha_entrega = null;
        String direccion_destino = jTextField_paquete_direccionDestino.getText();
        String telefono_destino = jTextField_paquete_telefonoDestino.getText();
        String direccion_origen = jTextField_paquete_direccionOrigen.getText();
        String telefono_origen = jTextField_paquete_telefonoOrigen.getText();

        if (direccion_destino.equals("") || telefono_destino.equals("") || direccion_origen.equals("") || telefono_origen.equals("")) {
            JOptionPane.showMessageDialog(this, "No se permiten campos vacíos", "Atención", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                fecha_entrega = formato.parse(jTextField_paquete_fechaEntrega.getText());
                int repartidor_seleccionado = jComboBox_paquete_repartidor.getSelectedIndex();
                int repartidor = listaRepartidoresMostrados.get(repartidor_seleccionado).getId_repartidor();

                if (aniadirPaquete) {
                    aniadirPaquete(fecha_entrega, direccion_destino, telefono_destino, direccion_origen, telefono_origen, repartidor);
                } else if (modificarPaquete) {
                    modificarPaquete(filaPaquete, fecha_entrega, direccion_destino, telefono_destino, direccion_origen, telefono_origen, repartidor);
                }

                try {
                    paqueteControlador.escribirPaquete(listaPaquetes);
                    cargarListas();
                    cargarTablas();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Problema en la lectura/escritura de datos", "Error", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }

                aniadirPaquete = false;
                modificarPaquete = false;

                limpiarCamposPaquete();
                desactivarBotonesPaquete();
                desactivarCamposPaquete();
            } catch (ParseException pe) {
                JOptionPane.showMessageDialog(this, "El formato fecha debe ser dd/mm/yyyy", "Atención", JOptionPane.WARNING_MESSAGE);
            } catch (IndexOutOfBoundsException iob) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar un repartidor", "Atención", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButton_paquete_guardarActionPerformed

    private void jButton_paquete_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_paquete_cancelarActionPerformed
        limpiarCamposPaquete();
        desactivarBotonesPaquete();
        desactivarCamposPaquete();
    }//GEN-LAST:event_jButton_paquete_cancelarActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_empresa_aniadir;
    private javax.swing.JButton jButton_empresa_borrar;
    private javax.swing.JButton jButton_empresa_cancelar;
    private javax.swing.JButton jButton_empresa_guardar;
    private javax.swing.JButton jButton_empresa_modificar;
    private javax.swing.JButton jButton_oficina_aniadir;
    private javax.swing.JButton jButton_oficina_borrar;
    private javax.swing.JButton jButton_oficina_cancelar;
    private javax.swing.JButton jButton_oficina_guardar;
    private javax.swing.JButton jButton_oficina_modificar;
    private javax.swing.JButton jButton_paquete_aniadir;
    private javax.swing.JButton jButton_paquete_borrar;
    private javax.swing.JButton jButton_paquete_cancelar;
    private javax.swing.JButton jButton_paquete_guardar;
    private javax.swing.JButton jButton_paquete_modificar;
    private javax.swing.JButton jButton_repartidor_aniadir;
    private javax.swing.JButton jButton_repartidor_borrar;
    private javax.swing.JButton jButton_repartidor_cancelar;
    private javax.swing.JButton jButton_repartidor_guardar;
    private javax.swing.JButton jButton_repartidor_modificar;
    private javax.swing.JComboBox<String> jComboBox_oficina_empresa;
    private javax.swing.JComboBox<String> jComboBox_paquete_repartidor;
    private javax.swing.JComboBox<String> jComboBox_repartidor_oficina;
    private javax.swing.JLabel jLabel_empresa_cif;
    private javax.swing.JLabel jLabel_empresa_director;
    private javax.swing.JLabel jLabel_empresa_nombre;
    private javax.swing.JLabel jLabel_empresa_web;
    private javax.swing.JLabel jLabel_oficina_direccion;
    private javax.swing.JLabel jLabel_oficina_email;
    private javax.swing.JLabel jLabel_oficina_empresa;
    private javax.swing.JLabel jLabel_oficina_encargado;
    private javax.swing.JLabel jLabel_oficina_telefono;
    private javax.swing.JLabel jLabel_paquete_direccionDestino;
    private javax.swing.JLabel jLabel_paquete_direccionOrigen;
    private javax.swing.JLabel jLabel_paquete_fechaEntrega;
    private javax.swing.JLabel jLabel_paquete_repartidor;
    private javax.swing.JLabel jLabel_paquete_telefonoDestino;
    private javax.swing.JLabel jLabel_paquete_telefonoOrigen;
    private javax.swing.JLabel jLabel_repartidor_antiguedad;
    private javax.swing.JLabel jLabel_repartidor_dni;
    private javax.swing.JLabel jLabel_repartidor_nombre;
    private javax.swing.JLabel jLabel_repartidor_oficina;
    private javax.swing.JLabel jLabel_repartidor_telefono;
    private javax.swing.JPanel jPanel_empresa;
    private javax.swing.JPanel jPanel_oficina;
    private javax.swing.JPanel jPanel_paquete;
    private javax.swing.JPanel jPanel_repartidor;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JTable jTable_empresa;
    private javax.swing.JTable jTable_oficina;
    private javax.swing.JTable jTable_paquete;
    private javax.swing.JTable jTable_repartidor;
    private javax.swing.JTextField jTextField_empresa_cif;
    private javax.swing.JTextField jTextField_empresa_director;
    private javax.swing.JTextField jTextField_empresa_nombre;
    private javax.swing.JTextField jTextField_empresa_web;
    private javax.swing.JTextField jTextField_oficina_direccion;
    private javax.swing.JTextField jTextField_oficina_email;
    private javax.swing.JTextField jTextField_oficina_encargado;
    private javax.swing.JTextField jTextField_oficina_telefono;
    private javax.swing.JTextField jTextField_paquete_direccionDestino;
    private javax.swing.JTextField jTextField_paquete_direccionOrigen;
    private javax.swing.JTextField jTextField_paquete_fechaEntrega;
    private javax.swing.JTextField jTextField_paquete_telefonoDestino;
    private javax.swing.JTextField jTextField_paquete_telefonoOrigen;
    private javax.swing.JTextField jTextField_repartidor_antiguedad;
    private javax.swing.JTextField jTextField_repartidor_dni;
    private javax.swing.JTextField jTextField_repartidor_nombre;
    private javax.swing.JTextField jTextField_repartidor_telefono;
    // End of variables declaration//GEN-END:variables

    private SimpleDateFormat formato;
    
    public List<Empresa> listaEmpresas;
    public List<Empresa> listaEmpresasMostradas;
    private EmpresaControlador empresaControlador;
    private int filaEmpresa;
    private boolean aniadirEmpresa = false;
    private boolean modificarEmpresa = false;
    
    private List<Oficina> listaOficinas;
    private List<Oficina> listaOficinasMostradas;
    private OficinaControlador oficinaControlador;
    private int filaOficina;
    private boolean aniadirOficina = false;
    private boolean modificarOficina = false;
    
    private List<Repartidor> listaRepartidores;
    private List<Repartidor> listaRepartidoresMostrados;
    private RepartidorControlador repartidorControlador;
    private int filaRepartidor;
    private boolean aniadirRepartidor = false;
    private boolean modificarRepartidor = false;
    
    private List<Paquete> listaPaquetes;
    private List<Paquete> listaPaquetesMostrados;
    private PaqueteControlador paqueteControlador;
    private int filaPaquete;
    private boolean aniadirPaquete = false;
    private boolean modificarPaquete = false;
    
    private void desactivarBotonesEmpresa(){
        jTable_empresa.setEnabled(true);
        jButton_empresa_aniadir.setEnabled(true);
        jButton_empresa_modificar.setEnabled(false);
        jButton_empresa_borrar.setEnabled(false);
        jButton_empresa_guardar.setEnabled(false);
        jButton_empresa_cancelar.setEnabled(false);
    }
    
    private void activarCamposEmpresa(){
        jTextField_empresa_nombre.setEditable(true);
        jTextField_empresa_cif.setEditable(true);
        jTextField_empresa_director.setEditable(true);
        jTextField_empresa_web.setEditable(true);
    }
    
    private void desactivarCamposEmpresa(){
        jTextField_empresa_nombre.setEditable(false);
        jTextField_empresa_cif.setEditable(false);
        jTextField_empresa_director.setEditable(false);
        jTextField_empresa_web.setEditable(false);
    }
    
    private void limpiarCamposEmpresa(){
        jTextField_empresa_nombre.setText("");
        jTextField_empresa_cif.setText("");
        jTextField_empresa_director.setText("");
        jTextField_empresa_web.setText("");
    }
    
    private void desactivarBotonesOficina(){
        jTable_oficina.setEnabled(true);
        jButton_oficina_aniadir.setEnabled(true);
        jButton_oficina_modificar.setEnabled(false);
        jButton_oficina_borrar.setEnabled(false);
        jButton_oficina_guardar.setEnabled(false);
        jButton_oficina_cancelar.setEnabled(false);
    }
    
    private void activarCamposOficina(){
        jTextField_oficina_direccion.setEditable(true);
        jTextField_oficina_telefono.setEditable(true);
        jTextField_oficina_email.setEditable(true);
        jTextField_oficina_encargado.setEditable(true);
        jComboBox_oficina_empresa.setEnabled(true);
    }
    
    private void desactivarCamposOficina(){
        jTextField_oficina_direccion.setEditable(false);
        jTextField_oficina_telefono.setEditable(false);
        jTextField_oficina_email.setEditable(false);
        jTextField_oficina_encargado.setEditable(false);
        jComboBox_oficina_empresa.setEnabled(false);
    }
    
    private void limpiarCamposOficina() {
        jTextField_oficina_direccion.setText("");
        jTextField_oficina_telefono.setText("");
        jTextField_oficina_email.setText("");
        jTextField_oficina_encargado.setText("");
        jComboBox_oficina_empresa.setSelectedItem(null);
    }
    
    private void desactivarBotonesRepartidor(){
        jTable_repartidor.setEnabled(true);
        jButton_repartidor_aniadir.setEnabled(true);
        jButton_repartidor_modificar.setEnabled(false);
        jButton_repartidor_borrar.setEnabled(false);
        jButton_repartidor_guardar.setEnabled(false);
        jButton_repartidor_cancelar.setEnabled(false);
    }
    
    private void activarCamposRepartidor(){
        jTextField_repartidor_dni.setEditable(true);
        jTextField_repartidor_nombre.setEditable(true);
        jTextField_repartidor_telefono.setEditable(true);
        jTextField_repartidor_antiguedad.setEditable(true);
        jComboBox_repartidor_oficina.setEnabled(true);
    }
    
    private void desactivarCamposRepartidor(){
        jTextField_repartidor_dni.setEditable(false);
        jTextField_repartidor_nombre.setEditable(false);
        jTextField_repartidor_telefono.setEditable(false);
        jTextField_repartidor_antiguedad.setEditable(false);
        jComboBox_repartidor_oficina.setEnabled(false);
    }
    
    private void limpiarCamposRepartidor() {
        jTextField_repartidor_dni.setText("");
        jTextField_repartidor_nombre.setText("");
        jTextField_repartidor_telefono.setText("");
        jTextField_repartidor_antiguedad.setText("");
        jComboBox_repartidor_oficina.setSelectedItem(null);
    }
    
    private void desactivarBotonesPaquete(){
        jTable_paquete.setEnabled(true);
        jButton_paquete_aniadir.setEnabled(true);
        jButton_paquete_modificar.setEnabled(false);
        jButton_paquete_borrar.setEnabled(false);
        jButton_paquete_guardar.setEnabled(false);
        jButton_paquete_cancelar.setEnabled(false);
    }
    
    private void activarCamposPaquete(){
        jTextField_paquete_fechaEntrega.setEditable(true);
        jTextField_paquete_direccionDestino.setEditable(true);
        jTextField_paquete_telefonoDestino.setEditable(true);
        jTextField_paquete_direccionOrigen.setEditable(true);
        jTextField_paquete_telefonoOrigen.setEditable(true);
        jComboBox_paquete_repartidor.setEnabled(true);
    }
    
    private void desactivarCamposPaquete(){
        jTextField_paquete_fechaEntrega.setEditable(false);
        jTextField_paquete_direccionDestino.setEditable(false);
        jTextField_paquete_telefonoDestino.setEditable(false);
        jTextField_paquete_direccionOrigen.setEditable(false);
        jTextField_paquete_telefonoOrigen.setEditable(false);
        jComboBox_paquete_repartidor.setEnabled(false);
    }
    
    private void limpiarCamposPaquete() {
        jTextField_paquete_fechaEntrega.setText("");
        jTextField_paquete_direccionDestino.setText("");
        jTextField_paquete_telefonoDestino.setText("");
        jTextField_paquete_direccionOrigen.setText("");
        jTextField_paquete_telefonoOrigen.setText("");
        jComboBox_paquete_repartidor.setSelectedItem(null);
    }
    
    private void cargarListas() throws ParserConfigurationException, SAXException, IOException, TransformerException, ParseException{
        empresaControlador = new EmpresaControlador();
        listaEmpresas = empresaControlador.getListaEmpresas();
        cargarListaEmpresasMostradas();
        
        oficinaControlador = new OficinaControlador();
        listaOficinas = oficinaControlador.getListaOficinas();
        cargarListaOficinasMostradas();
        
        repartidorControlador = new RepartidorControlador();
        listaRepartidores = repartidorControlador.getListaRepartidores();
        cargarListaRepartidoresMostrados();
        
        paqueteControlador = new PaqueteControlador();
        listaPaquetes = paqueteControlador.getListaPaquetes();
        cargarListaPaquetesMostrados();
    }
    
    private void cargarListaEmpresasMostradas(){
        listaEmpresasMostradas = new ArrayList<>();
        for (int i = 0; i < listaEmpresas.size(); i++) {
            if (listaEmpresas.get(i).isActivo()) {
                Empresa empresa = listaEmpresas.get(i);
                listaEmpresasMostradas.add(empresa);
            }
        }
    }
    
    private void cargarListaOficinasMostradas(){
        listaOficinasMostradas = new ArrayList<>();
        for (int i = 0; i < listaOficinas.size(); i++) {
            if (listaOficinas.get(i).isActivo()) {
                Oficina oficina = listaOficinas.get(i);
                listaOficinasMostradas.add(oficina);
            }
        }
    }
    
    private void cargarListaRepartidoresMostrados(){
        listaRepartidoresMostrados = new ArrayList<>();
        for (int i = 0; i < listaRepartidores.size(); i++) {
            if (listaRepartidores.get(i).isActivo()) {
                Repartidor repartidor = listaRepartidores.get(i);
                listaRepartidoresMostrados.add(repartidor);
            }    
        }
    }
        
    private void cargarListaPaquetesMostrados(){
        listaPaquetesMostrados = new ArrayList<>();
        for (int i = 0; i < listaPaquetes.size(); i++) {
            if (listaPaquetes.get(i).isActivo()) {
                Paquete paquete = listaPaquetes.get(i);
                listaPaquetesMostrados.add(paquete);
            }
        }
    }
    
    private boolean datosAsociadosEmpresa(int id_empresa){
        boolean datosAsociados = false;
        Iterator<Oficina> it_oficina = listaOficinasMostradas.iterator();
        while (it_oficina.hasNext() && datosAsociados == false) {
            Oficina o = it_oficina.next();
            if (o.getEmpresa() == id_empresa) {
                datosAsociados = true;
            }
        }
        return datosAsociados;
    }
    
    private boolean datosAsociadosOficina(int id_oficina){
        boolean datosAsociados = false;
        Iterator<Repartidor> it_repartidor = listaRepartidoresMostrados.iterator();
        while (it_repartidor.hasNext() && datosAsociados == false) {
            Repartidor r = it_repartidor.next();
            if (r.getOficina() == id_oficina) {
                datosAsociados = true;
            }
        }
        return datosAsociados;
    }
    
    private boolean datosAsociadosRepartidor(int id_repartidor){
        boolean datosAsociados = false;
        Iterator<Paquete> it_paquete = listaPaquetesMostrados.iterator();
        while (it_paquete.hasNext() && datosAsociados == false) {
            Paquete p = it_paquete.next();
            if (p.getRepartidor() == id_repartidor) {
                datosAsociados = true;
            }
        }
        return datosAsociados;
    }
    
    private void cargarTablas(){
        cargarTablaEmpresa();
        cargarTablaOficina();
        cargarTablaRepartidor();
        cargarTablaPaquete();
    }
    
    private void cargarCombos(){
        cargarComboOficina();
        cargarComboRepartidor();
        cargarComboPaquete();
    }
    
    private void limpiarCampos(){
        limpiarCamposEmpresa();
        limpiarCamposOficina();
        limpiarCamposRepartidor();
        limpiarCamposPaquete();
    }
    
    private void limpiarTablaEmpresa(){
        jTable_empresa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Nombre", "Web"
            }
        ));
    }
    
    public void cargarTablaEmpresa() {
        limpiarTablaEmpresa();
        DefaultTableModel modelo = (DefaultTableModel) jTable_empresa.getModel();
        for (int i = 0; i < listaEmpresasMostradas.size(); i++) {
            Empresa empresa = listaEmpresasMostradas.get(i);
            String[] tupla = new String[2];
            tupla[0] = empresa.getNombre_empresa();
            tupla[1] = empresa.getWeb();
            modelo.addRow(tupla);
        }
    }
    
    public void aniadirEmpresa(String nombre_empresa, String cif, String director, String web) {
        int id_empresa = listaEmpresas.get(listaEmpresas.size() - 1).getId_empresa() + 1;
        listaEmpresas.add(new Empresa(id_empresa, nombre_empresa, cif, director, web, true));
    }
    
    public void modificarEmpresa(int filaSeleccionada, String nombre_empresa, String cif, String director, String web) {
        Empresa empresa = listaEmpresasMostradas.get(filaSeleccionada);

        empresa.setNombre_empresa(nombre_empresa);
        empresa.setCif(cif);
        empresa.setDirector(director);
        empresa.setWeb(web);
    }
    
    public void eliminarEmpresa(int id_empresaEliminar) throws ParserConfigurationException, TransformerException{
        Iterator<Empresa> it = listaEmpresas.iterator();
        while (it.hasNext()) {
            Empresa e = it.next();
            if (e.getId_empresa() == id_empresaEliminar) {
                e.setActivo(false);
            }
        }
        empresaControlador.escribirEmpresa(listaEmpresas);
    }
    
    private void limpiarTablaOficina(){
        jTable_oficina.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Dirección", "Teléfono"
            }
        ));
    }
    
    private void cargarTablaOficina() {
        limpiarTablaOficina();
        DefaultTableModel modelo = (DefaultTableModel) jTable_oficina.getModel();
        for (int i = 0; i < listaOficinasMostradas.size(); i++) {
            Oficina oficina = listaOficinasMostradas.get(i);
            String[] tupla = new String[2];
            tupla[0] = oficina.getDireccion_oficina();
            tupla[1] = oficina.getTelefono_oficina();
            modelo.addRow(tupla);
        }
    }
    
    private void cargarComboOficina(){
        jComboBox_oficina_empresa.removeAllItems();
        for (int i = 0; i < listaEmpresasMostradas.size(); i++) {
            jComboBox_oficina_empresa.addItem(listaEmpresasMostradas.get(i).getNombre_empresa());
        }
    }
    
    private void aniadirOficina(String direccion_oficina, String telefono_oficina, String email, String encargado, int empresa) {
        int id_oficina = listaOficinas.get(listaOficinas.size() - 1).getId_oficina() + 1;
        listaOficinas.add(new Oficina(id_oficina, direccion_oficina, telefono_oficina, email, encargado, empresa, true));
    }
    
    public void modificarOficina(int filaSeleccionada, String direccion_oficina, String telefono_oficina, String email, String encargado, int empresa) {
        Oficina oficina = listaOficinasMostradas.get(filaSeleccionada);

        oficina.setDireccion_oficina(direccion_oficina);
        oficina.setTelefono_oficina(telefono_oficina);
        oficina.setEmail(email);
        oficina.setEncargado(encargado);
        oficina.setEmpresa(empresa);
    }
    
    private void eliminarOficina(int id_oficinaEliminar) throws TransformerException, ParserConfigurationException{
        Iterator<Oficina> it = listaOficinas.iterator();
        while (it.hasNext()) {
            Oficina o = it.next();
            if (o.getId_oficina() == id_oficinaEliminar) {
                o.setActivo(false);
            }
        }
        oficinaControlador.escribirOficina(listaOficinas);
    }
    
    private void limpiarTablaRepartidor(){
        jTable_repartidor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Nombre", "Teléfono"
            }
        ));
    }
    
    private void cargarTablaRepartidor() {
        limpiarTablaRepartidor();
        DefaultTableModel modelo = (DefaultTableModel) jTable_repartidor.getModel();
        for (int i = 0; i < listaRepartidoresMostrados.size(); i++) {
            Repartidor repartidor = listaRepartidoresMostrados.get(i);
            String[] tupla = new String[2];
            tupla[0] = repartidor.getNombre_repartidor();
            tupla[1] = repartidor.getTelefono_repartidor();
            modelo.addRow(tupla);
        }
    }
    
    private void cargarComboRepartidor(){
        jComboBox_repartidor_oficina.removeAllItems();
        for (int i = 0; i < listaOficinasMostradas.size(); i++) {
            jComboBox_repartidor_oficina.addItem(listaOficinasMostradas.get(i).getDireccion_oficina());
        }
    }
    
    private void aniadirRepartidor(String dni, String nombre_repartidor, String telefono_repartidor, int antiguedad, int oficina) {
        int id_repartidor = listaRepartidores.get(listaRepartidores.size() - 1).getId_repartidor() + 1;
        listaRepartidores.add(new Repartidor(id_repartidor, dni, nombre_repartidor, telefono_repartidor, antiguedad, oficina, true));
    }
    
    private void modificarRepartidor(int filaSeleccionada, String dni, String nombre_repartidor, String telefono_repartidor, int antiguedad, int oficina){
        Repartidor repartidor = listaRepartidoresMostrados.get(filaSeleccionada);
        
        repartidor.setDni(dni);
        repartidor.setNombre_repartidor(nombre_repartidor);
        repartidor.setTelefono_repartidor(telefono_repartidor);
        repartidor.setAntiguedad(antiguedad);
        repartidor.setOficina(oficina);
    }
                
    private void eliminarRepartidor(int id_repartidorEliminar) throws ParserConfigurationException, TransformerException{
        Iterator<Repartidor> it = listaRepartidores.iterator();
        while (it.hasNext()) {
            Repartidor r = it.next();
            if (r.getId_repartidor()== id_repartidorEliminar) {
                r.setActivo(false);
            }
        }
        repartidorControlador.escribirRepartidor(listaRepartidores);
    }
    
    private void limpiarTablaPaquete(){
        jTable_paquete.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "Fecha", "Destino", "Origen"
            }
        ));
    }
    
    private void cargarTablaPaquete() {
        limpiarTablaPaquete();
        DefaultTableModel modelo = (DefaultTableModel) jTable_paquete.getModel();
        for (int i = 0; i < listaPaquetesMostrados.size(); i++) {
            Paquete paquete = listaPaquetesMostrados.get(i);
            String[] tupla = new String[3];
            tupla[0] = formato.format(paquete.getFecha_entrega());
            tupla[1] = paquete.getDireccion_destino();
            tupla[2] = paquete.getDireccion_origen();
            modelo.addRow(tupla);
        }
    }
    
    private void cargarComboPaquete(){
        jComboBox_paquete_repartidor.removeAllItems();
        for (int i = 0; i < listaRepartidoresMostrados.size(); i++) {
            jComboBox_paquete_repartidor.addItem(listaRepartidoresMostrados.get(i).getNombre_repartidor());
        }
    }
    
    private void aniadirPaquete(Date fecha_entrega, String direccion_destino, String telefono_destino, String direccion_origen, String telefono_origen, int repartidor){
        int id_paquete = listaPaquetes.get(listaPaquetes.size() - 1).getId_paquete() + 1;
        listaPaquetes.add(new Paquete(id_paquete, fecha_entrega, direccion_destino, telefono_destino, direccion_origen, telefono_origen, repartidor, true));
    }
    
    private void modificarPaquete(int filaSeleccionada, Date fecha_entrega, String direccion_destino, String telefono_destino, String direccion_origen, String telefono_origen, int repartidor){
        Paquete paquete = listaPaquetesMostrados.get(filaSeleccionada);
        
        paquete.setFecha_entrega(fecha_entrega);
        paquete.setDireccion_destino(direccion_destino);
        paquete.setTelefono_destino(telefono_destino);
        paquete.setDireccion_origen(direccion_origen);
        paquete.setTelefono_origen(telefono_origen);
        paquete.setRepartidor(repartidor);
    }
    
    private void eliminarPaquete(int id_paqueteEliminar) throws ParserConfigurationException, TransformerException{
        Iterator<Paquete> it = listaPaquetes.iterator();
        while (it.hasNext()) {
            Paquete p = it.next();
            if (p.getId_paquete()== id_paqueteEliminar) {
                p.setActivo(false);
            }
        }
        paqueteControlador.escribirPaquete(listaPaquetes);
    }
    
}
